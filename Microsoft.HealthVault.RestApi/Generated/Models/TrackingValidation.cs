// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.HealthVault.RestApi.Generated.Models
{
    using Microsoft.HealthVault;
    using Microsoft.HealthVault.RestApi;
    using Microsoft.HealthVault.RestApi.Generated;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// class for Tracking Validation
    /// </summary>
    public partial class TrackingValidation
    {
        /// <summary>
        /// Initializes a new instance of the TrackingValidation class.
        /// </summary>
        public TrackingValidation()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrackingValidation class.
        /// </summary>
        /// <param name="actionPlanTask">Gets or sets the action plan
        /// task.</param>
        /// <param name="xmlThingDocument">Gets or sets the XML thing
        /// document.</param>
        public TrackingValidation(ActionPlanTask actionPlanTask = default(ActionPlanTask), string xmlThingDocument = default(string))
        {
            ActionPlanTask = actionPlanTask;
            XmlThingDocument = xmlThingDocument;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the action plan task.
        /// </summary>
        [JsonProperty(PropertyName = "actionPlanTask")]
        public ActionPlanTask ActionPlanTask { get; set; }

        /// <summary>
        /// Gets or sets the XML thing document.
        /// </summary>
        [JsonProperty(PropertyName = "xmlThingDocument")]
        public string XmlThingDocument { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ActionPlanTask != null)
            {
                ActionPlanTask.Validate();
            }
        }
    }
}
