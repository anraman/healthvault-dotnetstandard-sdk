// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.HealthVault.RestApi.Generated.Models
{
    using Microsoft.HealthVault;
    using Microsoft.HealthVault.RestApi;
    using Microsoft.HealthVault.RestApi.Generated;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An adherence summary for a task in an action plan
    /// </summary>
    public partial class ActionPlanTaskAdherenceSummary
    {
        /// <summary>
        /// Initializes a new instance of the ActionPlanTaskAdherenceSummary
        /// class.
        /// </summary>
        public ActionPlanTaskAdherenceSummary()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActionPlanTaskAdherenceSummary
        /// class.
        /// </summary>
        /// <param name="id">The Id of the task</param>
        /// <param name="name">The name of the task</param>
        /// <param name="windowType">The recurrence type of the schedule
        /// window. Possible values include: 'Unknown', 'None', 'Daily',
        /// 'Weekly'</param>
        /// <param name="startDate">The starting date of the task or the start
        /// date requested, whichever is later.</param>
        /// <param name="endDate">The ending date of the task or the end date
        /// requested, whichever is earlier.</param>
        /// <param name="weeklyAdherence">A list of weekly adherence
        /// summaries</param>
        public ActionPlanTaskAdherenceSummary(System.Guid? id = default(System.Guid?), string name = default(string), string windowType = default(string), System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), IList<WeeklyAdherenceSummary> weeklyAdherence = default(IList<WeeklyAdherenceSummary>))
        {
            Id = id;
            Name = name;
            WindowType = windowType;
            StartDate = startDate;
            EndDate = endDate;
            WeeklyAdherence = weeklyAdherence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Id of the task
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the task
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the recurrence type of the schedule window. Possible
        /// values include: 'Unknown', 'None', 'Daily', 'Weekly'
        /// </summary>
        [JsonProperty(PropertyName = "windowType")]
        public string WindowType { get; set; }

        /// <summary>
        /// Gets or sets the starting date of the task or the start date
        /// requested, whichever is later.
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or sets the ending date of the task or the end date requested,
        /// whichever is earlier.
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets a list of weekly adherence summaries
        /// </summary>
        [JsonProperty(PropertyName = "weeklyAdherence")]
        public IList<WeeklyAdherenceSummary> WeeklyAdherence { get; set; }

    }
}
